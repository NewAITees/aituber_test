[project]
name = "aituber"
version = "0.1.0"
description = "AITuber development environment"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "ollama>=0.1.0",
    "transformers>=4.36.0",
    "torch>=2.1.0",
    "sounddevice>=0.4.6",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "librosa>=0.10.0",
    "pytchat>=0.0.6",
    "websockets>=11.0.3",
    "requests>=2.31.0",
    "psutil>=5.9.0",
    "GPUtil>=1.4.0",
    "pydantic>=2.4.0",
    "httpx>=0.25.0"
]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "pre-commit>=3.4.0",
    "safety>=2.3.0",
    "bandit>=1.7.0"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    ".git", ".ruff_cache", ".venv", ".vscode",
    "__pycache__", "*.egg-info", "build", "dist"
]

[tool.ruff.lint]
preview = true
select = [
    "ANN",  # type annotations
    "E", "W",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "SIM",  # flake8-simplify
    "PTH",  # pathlib
    "RUF",  # ruff-specific
    "PD",  # pandas
    "NPY",  # numpy
]

ignore = [
    "F841",  # unused variables
    "F401",  # unused imports
    "B007",  # unused loop variable
    "B008",  # function calls in default arguments
    "B905",  # zip without strict
    "G004",  # f-string in logging
    "PLR2004",  # magic numbers
    "ANN101",  # self type annotation not needed
]

unfixable = ["F401", "F841"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*.py" = ["ANN", "S101"]
"scripts/**/*.py" = ["T201"]

[tool.ruff.lint.isort]
known-first-party = ["aituber"]
known-third-party = ["numpy", "pandas", "torch", "transformers"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unreachable = true
check_untyped_defs = true
no_implicit_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ollama.*",
    "transformers.*",
    "librosa.*",
    "pytchat.*",
    "GPUtil.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=xml"
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m not slow')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]
